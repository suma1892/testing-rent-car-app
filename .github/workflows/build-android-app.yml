name: Build and Deploy Android app

on:
  push:
    branches:
      - dev

jobs:
  build:
    environment: STAGING_ENV
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Auto Increment Version
        run: |
          VERSION_FILE="android/version.properties"
          VERSION_NAME=$(grep 'versionName' $VERSION_FILE | cut -d '=' -f2 | tr -d ' ')
          VERSION_CODE=$(grep 'versionCode' $VERSION_FILE | cut -d '=' -f2 | tr -d ' ')
          
          # Increment minor version (1.38.0 â†’ 1.38.1)
          IFS='.' read -r -a version_parts <<< "$VERSION_NAME"
          version_parts[2]=$((version_parts[2] + 1))
          NEW_VERSION_NAME="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}"
          NEW_VERSION_CODE=$((VERSION_CODE + 1))

          # Update version file
          sed -i "s/versionName=.*/versionName=$NEW_VERSION_NAME/" $VERSION_FILE
          sed -i "s/versionCode=.*/versionCode=$NEW_VERSION_CODE/" $VERSION_FILE

          echo "Updated to versionName=$NEW_VERSION_NAME & versionCode=$NEW_VERSION_CODE"
      
      - name: Commit Updated Version
          env:
            GH_PAT: ${{ secrets.GH_PAT }}
          run: |
            git config --global user.name "github-actions"
            git config --global user.email "github-actions@github.com"
            git remote set-url origin https://x-access-token:${GH_PAT}@github.com/suma1892/testing-rent-car-app.git
            git add android/version.properties
            git commit -m "chore(release): bump version to $NEW_VERSION_NAME"
            git push origin dev


      - name: Create Git Tag
        run: |
          git tag v$NEW_VERSION_NAME-staging
          git push origin v$NEW_VERSION_NAME-staging

      # - name: Install Java
      #   uses: actions/setup-java@v3
      #   with:
      #     java-version: 17
      #     distribution: temurin
      #     cache: gradle

      # - name: Setup Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '18'
      #     cache: 'yarn'

      # - name: Cache node_modules
      #   uses: actions/cache@v3
      #   with:
      #     path: node_modules
      #     key: node-modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       node-modules-${{ runner.os }}-

      # - name: Install Dependencies
      #   run: yarn install --frozen-lockfile

      # - name: Remove Hermes tarball
      #   run: rm -rf node_modules/react-native/sdks/download/hermes.tar.gz

      # - name: Create .env File
      #   run: |
      #     echo "ENV=${{ vars.ENV }}" > .env.staging
      #     echo "APP_URL=${{ vars.APP_URL }}" >> .env.staging
      #     echo "URL_API=${{ vars.URL_API }}" >> .env.staging
      #     echo "URL_IMAGE=${{ vars.URL_IMAGE }}" >> .env.staging
      #     echo "MIDTRANS_CLIENT_KEY=${{ vars.MIDTRANS_CLIENT_KEY }}" >> .env.staging
      #     echo "API_MIDTRANS=${{ vars.API_MIDTRANS }}" >> .env.staging
      #     echo "APP_ID=${{ vars.APP_ID }}" >> .env.staging
      #     echo "API_MESSENGER=${{ vars.API_MESSENGER }}" >> .env.staging

      # - name: Cache Android SDK & NDK
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.android
      #     key: android-sdk-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties') }}
      #     restore-keys: |
      #       android-sdk-${{ runner.os }}-

      # - name: Install Android SDK & NDK (Jika Cache Tidak Ada)
      #   run: |
      #     yes | sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses
      #     sudo $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager "ndk;21.4.7075529"

      # - name: Build APK application
      #   run: |
      #     cd android
      #     ./gradlew assembleStagingRelease --max-workers=2 --parallel --no-daemon
      
      

      # # - name: Debug APK Path
      # #   run: ls -R android/app/build/outputs/apk/staging/release

      # - name: Upload artifact to Firebase App Distribution
      #   uses: wzieba/Firebase-Distribution-Github-Action@v1
      #   with:
      #     appId: ${{ secrets.FIREBASE_APP_ID }}
      #     serviceCredentialsFileContent: ${{ secrets.FIREBASE_CREDENTIALS }}
      #     groups: TESTERS
      #     file: android/app/build/outputs/apk/staging/release/app-staging-release.apk
