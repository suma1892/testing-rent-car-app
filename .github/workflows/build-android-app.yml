name: Build and Deploy Android app

on:
  push:
    branches:
      - dev

jobs:
  build:
    environment: STAGING_ENV
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      # - name: Run Yarn Install
      #   run: |
      #     npm i -g corepack
      #     yarn install
      - name: Clear Cache & Reinstall Dependencies
        run: |
          rm -rf node_modules package-lock.json yarn.lock
          yarn cache clean
          yarn install
      - name: Remove Hermes tarball
        run: rm -rf node_modules/react-native/sdks/download/hermes.tar.gz

      - name: Ensure Hermes tarball is removed
        run: |
          if [ -f "node_modules/react-native/sdks/download/hermes.tar.gz" ]; then
            rm -rf node_modules/react-native/sdks/download/hermes.tar.gz
          fi


      - name: Create .env File
        run: |
          echo "ENV=${{ vars.ENV }}" > .env.staging
          echo "APP_URL=${{ vars.APP_URL }}" >> .env.staging
          echo "URL_API=${{ vars.URL_API }}" >> .env.staging
          echo "URL_IMAGE=${{ vars.URL_IMAGE }}" >> .env.staging
          echo "MIDTRANS_CLIENT_KEY=${{ vars.MIDTRANS_CLIENT_KEY }}" >> .env.staging
          echo "API_MIDTRANS=${{ vars.API_MIDTRANS }}" >> .env.staging
          echo "APP_ID=${{ vars.APP_ID }}" >> .env.staging
          echo "API_MESSENGER=${{ vars.API_MESSENGER }}" >> .env.staging

      - name: Verify .env.staging File
        run: cat .env.staging

      # - name: Build AAB application
      #   run: |
      #     cd android
      #     ./gradlew bundleProductionRelease
      - name: Apply Patch
        run: npx patch-package

      - name: Clean Gradle
        run: |
          cd android
          ./gradlew clean
          
      - name: Build APK application
        run: |
          cd android
          ./gradlew assembleStagingRelease

      # - name: Install Fastlane
      #   run: |
      #     gem install fastlane -NV

      # - name: Create JSON Key File
      #   run: echo "${{ secrets.GOOGLE_PLAY_JSON_KEY }}" > ./get-and-ride-service-acount-production.json

      # - name: Upload to Google Play Console
      #   env:
      #     GOOGLE_PLAY_JSON_KEY: ${{ secrets.GOOGLE_PLAY_JSON_KEY }}
      #   run: |
      #     cd android
      #     fastlane deploy_internal

      # - name: Upload APK as artifact
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: app
      #     path: android/app/build/outputs/apk/production/app-production-release.apk
      #     retention-days: 3