name: Build and Deploy Staging App

on:
  push:
    branches:
      - main

jobs:
  build:
    environment: STAGING_ENV
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.1'
          cache: 'yarn'

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt
          cache: gradle

      - name: Clean Install Dependencies
        run: |
          rm -rf node_modules
          rm -f yarn.lock
          yarn cache clean
          yarn install --frozen-lockfile --network-timeout 1000000

      - name: Fix Missing Native Modules
        run: yarn add @react-native-community/cli-platform-android

      - name: Verify Native Modules
        run: |
          ls -la node_modules/@react-native-community/cli-platform-android/
          cat node_modules/@react-native-community/cli-platform-android/native_modules.gradle

      - name: Run React Native Postinstall
        run: yarn run postinstall

      - name: Start Metro Bundler
        run: yarn run start --reset-cache &

      - name: Create .env File
        run: |
          echo "ENV=${{ vars.ENV }}" > .env.staging
          echo "APP_URL=${{ vars.APP_URL }}" >> .env.staging
          echo "URL_API=${{ vars.URL_API }}" >> .env.staging
          echo "URL_IMAGE=${{ vars.URL_IMAGE }}" >> .env.staging
          echo "MIDTRANS_CLIENT_KEY=${{ vars.MIDTRANS_CLIENT_KEY }}" >> .env.staging
          echo "API_MIDTRANS=${{ vars.API_MIDTRANS }}" >> .env.staging
          echo "APP_ID=${{ vars.APP_ID }}" >> .env.staging
          echo "API_MESSENGER=${{ vars.API_MESSENGER }}" >> .env.staging

      - name: Verify .env.staging File
        run: cat .env.staging

  deploy:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt
          cache: gradle

      - name: Setup Fastlane
        run: gem install fastlane -NV

      - name: Grant execute permission to Gradle
        run: |
          cd android
          chmod +x ./gradlew
          cd ..

      - name: Clean Gradle
        run: |
          cd android
          ./gradlew clean

      - name: Build APK
        run: |
          cd android
          ./gradlew assembleStagingRelease

      - name: Upload APK to Firebase App Distribution
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}
        run: |
          cd android
          fastlane distribute_staging